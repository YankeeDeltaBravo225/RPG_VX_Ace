#==============================================================================
# ■ RGSS3 テキストメッセージ自動改行 by YankeeDeltaBravo225
#    https://github.com/YankeeDeltaBravo225/RPG_VX_Ace/
#
#    閾値を超えた長さのテキストメッセージに対して自動で改行を入れます。
#    デフォルトでは「max_len = 60」としています。
#    ウィンドウ幅に合わせて好みの数字に変えてください。
#==============================================================================


#==============================================================================
# ■ Game_Message
#------------------------------------------------------------------------------
#  Window_Messageの扱う文字列のクラスメソッドを再定義します。
#
#  1行の長さがWindow幅を超えると表示しきれないため、途中に改行を挿入します。
#==============================================================================

class Game_Message

  #--------------------------------------------------------------------------
  # ● テキストの追加
  #    
  #--------------------------------------------------------------------------
  alias
    orig_add_auto_newline
         add
  def add(text)

    # 改行する閾値です、好みに合わせて適宜修正して下さい。
    max_len = 60
    
    # 行の文字数が閾値を超えたら途中で改行を挿入する
    aligned_text = exs_align_text(text, max_len)

    # 元々のメソッドを実行
    orig_add_auto_newline(aligned_text)
  end


  #--------------------------------------------------------------------------
  # ● 指定幅で改行コードを挿入した文字列を返す
  #    独自メソッド
  #--------------------------------------------------------------------------
  def exs_align_text(text, max_width)
    # 通常文字と \i[xyz] 形式の絵文字を切り分け
    chunks = text.split(/(\\i\[\s*\d+\s*\])/)

    aligned = ""
    width   = 0
  
    chunks.each{ |chunk|
      #絵文字は特別扱い、ASCII文字2つ分と扱う
      if chunk.start_with?("\\i\[") 
        width += 2
        aligned << chunk
        next
      end

      chunk.chars.each {|c|
        # 閾値を超えたら改行を挿入
        if width >= max_width
          width = 0
          aligned << "\n"
        end

        if c == "\n"
          # 改行なら横位置はリセット
          width = 0
        else
          # 通常文字は漢字等ならASCII2文字分と判定
          width += c.ascii_only? ? 1:2  
        end

        aligned << c
      }
    }

    return aligned 
  end

end  # class Game_Message
